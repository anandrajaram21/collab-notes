version: "3.8"

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: collab-notes-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: collab_notes
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Migration Service (Runs Once)
  migrate:
    build:
      context: .
      dockerfile: Dockerfile.frontend
      target: build_app
    container_name: collab-notes-migrate
    depends_on:
      postgres:
        condition: service_healthy
    command: bun run db:push
    environment:
      DATABASE_URL: postgres://postgres:postgres@postgres:5432/collab_notes

  # Next.js Frontend Application
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: collab-notes-frontend
    ports:
      - "3000:3000"
    environment:
      NEXT_PUBLIC_APP_URL: http://localhost:3000
      NEXT_PUBLIC_HOCUSPOCUS_URL: ws://localhost:3001
      DATABASE_URL: postgres://postgres:postgres@postgres:5432/collab_notes
    depends_on:
      migrate:
        condition: service_completed_successfully
    restart: unless-stopped

  # Hocuspocus Collaboration Server
  hocuspocus:
    build:
      context: .
      dockerfile: Dockerfile.hocuspocus
    container_name: collab-notes-hocuspocus
    ports:
      - "3001:3001"
    environment:
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/collab_notes
      - HOCUSPOCUS_PORT=3001
      - HOCUSPOCUS_SECRET=your_secret_key
    depends_on:
      migrate:
        condition: service_completed_successfully
    restart: unless-stopped

volumes:
  postgres-data:
